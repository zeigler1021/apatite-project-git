---
title: "Apatite Data_Loading and Setup"
author: "Spencer  Zeigler"
date: "6/16/2021"
output:
  html_document: 
    df_print: paged
    css: stylesheet.css
    number_sections: yes
    toc: yes
    toc_float: true
    toc_depth: 3
    code_folding: show
editor_options:
  chunk_output_type: console
---
#Setup

```{r setup, include=FALSE}
# load libraries

library(MASS) 
library(latex2exp) 
library(readxl) 
library(ggplot2)
library(tidyverse) 
library(tidyr) 
library(scales) 
library(dplyr) 
library(readr) 
library(xlsx) 
library(performance) #check model

par(mfrow=c(1, 1)) #how to arrange plots, 1 per row, 1 per column

#Theme options
theme_set(theme_linedraw())
theme_update(plot.title = element_text(hjust = 0.5)) #adjusts theme so that all titles are centered
theme_update(plot.subtitle= element_text(hjust = 0.5)) #adjusts subtitle so they are all centered
options(scipen = 999) #prints numbers instead of scientific notation
```

#Import Data

Import master datasheet
```{r}
apatite <- read_excel("./Data Comps_v7.xlsx", sheet="Data Comps") 
as_tibble(apatite)

apatite <- apatite %>%
  filter(!is.na(apatite$empty)) #this gets rid of data points that are missing information
```

Import Linear Regression Data
```{r}
quad <- read_excel("./Linear Reg Results.xlsx", sheet="comp")
```

Making dataframe of 'common only' apatite
```{r}
#Grains Removed
common_apatite <- apatite %>%
  filter(!size.name == "Large & Rare", !size.name == "Small & Rare")
```

Making parameter based dataframes
```{r}
#Dataframe by Roughness Index 
ri1 <- common_apatite %>% filter(ri=="1")
ri2 <- common_apatite %>% filter(ri=="2")
ri3 <- common_apatite %>% filter(ri=="3")

#Dataframe by Geometric Classification
gca <- common_apatite %>% filter(gc=="A") 
gcb <- common_apatite %>% filter(gc=="B") 
gcc <- common_apatite %>% filter(gc=="C") 
ab <- common_apatite %>% filter(gc == "A" | gc == "B") %>% mutate(s.gem= "AB")

#Create Dataframes split by both geometry and roughness 
a1 <- common_apatite %>% filter(s.gem == "A1") 
a2 <- common_apatite %>% filter(s.gem == "A2")
a3 <- common_apatite %>% filter(s.gem == "A3")
b1 <- common_apatite %>% filter(s.gem == "B1") 
b2 <- common_apatite %>% filter(s.gem == "B2")
b3 <- common_apatite %>% filter(s.gem == "B3")
c1 <- common_apatite %>% filter(s.gem == "C1") 
c2 <- common_apatite %>% filter(s.gem == "C2")
c3 <- common_apatite %>% filter(s.gem == "C3")

#Make dataframes based on terminations 
term0 <- common_apatite %>% filter(np == "0")
term1 <- common_apatite %>% filter(np == "1")
term2 <- common_apatite %>% filter(np =="2")
```






