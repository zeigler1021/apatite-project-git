
plot.gem <- function(df, gem, vol = FALSE) {
  
  theme_update(plot.title = element_text(hjust = 0)) #adjusts theme so that all titles are centered
  theme_update(plot.subtitle= element_text(hjust = 0))
  
  if (vol == FALSE) {
    x <- as.numeric(unlist(df %>% select(s.ft)))
    y <- as.numeric(unlist(df %>% select(db.ft)))
    
    slope <- lm(y ~ 0 + x, data= df)$coefficient[1]
    error <- summary(lm(y ~ 0 + x, data=df))$sigma
    
    slope.r <- round(slope, 3)
    error.r <- round(error, 3)
    
    p <- ggplot() + 
            xlim(.47, .8) + ylim(.47, .8) +
            geom_abline(slope = 1, intercept = 0, linetype = 2) + 
            geom_abline(slope= slope, intercept= 0, color = "#8560e8") +
            geom_point(df, mapping=aes(x,y), size =2) + 
            labs(title = glue("{gem}"),
                 subtitle = glue("slope = {slope.r}\nstd error = {error.r}"),
                 x= "2D Ft", y= "3D Ft")
    return(p)
  } 
  if (vol == TRUE) {
    x <- as.numeric(unlist(df %>% select(s.v)))/10^5
    y <- as.numeric(unlist(df %>% select(db.v)))/10^5
    
    slope <- lm(y ~ 0 + x, data= df)$coefficient[1]
    error <- summary(lm(y ~ 0 + x, data=df))$sigma
    
    slope.r <- round(slope, 3)
    error.r <- round(error, 3) 
    
    p <- ggplot() + 
            #xlim(.47, .8) + ylim(.47, .8) +
            geom_abline(slope = 1, intercept = 0, linetype = 2) + 
            geom_abline(slope= slope, intercept= 0, color = "#7daefd") +
            geom_point(df, mapping=aes(x,y), size =2) + 
            labs(title = glue("{gem}"),
                 subtitle = glue("slope = {slope.r}\nstd error = {error.r}"),
                 x= "2D Vol. (10^5)", y= "3D Vol. (10^5)")
    return(p)
  }

}
```