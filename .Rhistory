rare_small <- apatite %>% filter(size.cat == "rare- small")
common <- apatite %>% filter(size.cat == "common")
rare_large <- apatite %>% filter(size.cat == "rare- large")
# Chunk 7
source("./Functions/function_error_propagation.R")
source("./Functions/function_bootstrapped_slopes.R")
#source("function_linreg_slope_uncertainty.R")
source("./Functions/function_model_diagnostics.R")
#source("function_ttest_compare.R")
source("./Functions/function_bootstrap_linreg_nested.R")
source("./Functions/function_taylor_uncertainties_nested.R")
source("./Functions/function_taylor_uncertainties_nested_notfixed.R")
source("./Functions/function_bootstrap_linreg_nested_notfixed.R")
source("./Functions/function_manual_pvalue.R")
source("./Functions/function_taylor_overlap.R")
source("./Functions/function_residual_uncertainty.R")
# Chunk 8
#source("function_error_lines.R")
#source("function_plot_results.R")
ggthemes::calc_pal()
ggthemes::colorblind_pal()
ggthemes::wsj_pal(palette = "colors6")
ggthemes::palette_pander(7)
jcolors::scale
ggthemes_data$tableau #colorblind #prints hex codes from ggthemes
dichromat::colorschemes
qual_color_random <- c("#322288", "#aa4499", "#44aa99", "#671000", "#989934", "#6599cc", "#aa4466", "#ddcc77", "#000000")
cb <- c("#c85200", "#5f9ed1","#595959")
cb2 <- c("#f06400", "#949494", "#008CF0")
cb3 <- c("#4ACBFA", "#FAA35E", "#6E61DB")
cb4 <- c("#51796A", "#F5B347")
cb5 <- c("#497A7A", "#F7D552")
colorspace::swatchplot(tableau_color_pal("Color Blind"))
colorspace::swatchplot(tf_color)
color3 <- c("#004352", "#3fa38f", "#ef3e36")
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
#theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
ggplot(apatite, aes(x = s.ft, color = gem)) +
geom_density()
ggplot(apatite, aes(x = db.ft, color = gem)) +
geom_density()
ggplot(apatite, aes(x = db.ft, color = gem)) +
geom_density(identity = "position")
ggplot(apatite, aes(x = db.ft, color = gem)) +
geom_density(position = "identity")
install.packages("ggExtra")
install.packages("ggExtra")
library(ggExtra)
color3 <- c("#004352", "#3fa38f", "#ef3e36")
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
#theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
theme(legend.position = "none") +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
#theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
library(tidyverse)
color3 <- c("#004352", "#3fa38f", "#ef3e36")
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
theme(legend.position = "none") +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
#theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
color3 <- c("#004352", "#3fa38f", "#ef3e36")
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16)
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
color3 <- c("#004352", "#3fa38f", "#ef3e36")
color3 <- c("#004352", "#3fa38f", "#ef3e36")
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16)
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
color3 <- c("#004352", "#3fa38f", "#ef3e36")
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
ggMarginal(type = "densigram") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
ggMarginal(data = apatite, x = s.ft, y = db.ft, type = "densigram") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
p <- apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
ggMarginal(p, type = "densigram") +
```
ggMarginal(p, type = "densigram")
ggMarginal(p, type = "density")
ggMarginal(p, type = "boxplot")
ggMarginal(p, type = "density")
?ggMarginal
ggMarginal(p, type = "violin")
ggMarginal(p, type = "density")
ggplot(apatite, aes(x = s.ft, y = db.ft)) +
geom_boxplot()
cor(apatite$s.ft, apatite$db.ft)
install.packages("ellipse")
library(ellipse)
ellipse::plotcorr(cor(apatite$s.ft, apatite$db.ft)  )
corapatite <- apatite %>% select(gem, gc, ri, np, s.ft, db.ft, size.cat)
cor(corapatite)
corapatite <- apatite %>% select(ri, np)
cor(corapatite)
install.packages("ridgeline")
install.packages("ggridges")
library(ggridges)
slope <- lm(s.ft ~ 0 + db.ft, apatite)
slope <- lm(s.ft ~ 0 + db.ft, apatite)$residuals
cbind(apatite$size.cat, slope)
View(apatite)
apatite$size.cat
cbind(apatite$size.cat, slope)
bind_cols(apatite$size.cat, slope)
bind_cols(apatite$size.cat, slope) %>%
ggplot(aes(x = ...2, y = ...1)) +
geom_density_ridges()
volresid <- lm(s.v ~ 0 + db.v, apatite)$residuals
bind_cols(apatite$ri, volresid) %>%
ggplot(aes(x = ...2, y = ...1)) +
geom_density_ridges()
bind_cols(apatite$ri, volresid) %>%
ggplot(aes(x = ...2, y = ...1)) +
geom_density_ridges(bins= 20)
bind_cols(apatite$size.cat, volresid) %>%
ggplot(aes(x = ...2, y = ...1)) +
geom_density_ridges(bins= 20)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...2, y = ...1)) +
geom_point()
ftresid <- lm(s.ft ~ 0 + db.ft, apatite)$residuals
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...2, y = ...1)) +
geom_point()
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_point()
volresid <- lm(s.v ~ 0 + db.v, apatite)$residuals
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_point() +
geom_jiter()
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_point() +
geom_jitter()
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_point() +
geom_jitter() +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_point(alpha = 0.5, color = "lightblue") +
geom_jitter() +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_point() +
geom_jitter(alpha = 0.5, color = "lightblue") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_point(stat = "summary", fun.y = "mean") +
geom_jitter(alpha = 0.5, color = "lightblue") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_point(stat = "summary", fun.y = "mean") +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals show a strong relationship with size.")
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals show\na strong relationship with size.")
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals showa strong\ nrelationship with size.")
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals show a strong\nrelationship with size.")
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
geom_hline(yintercept = 0, size = 3)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
geom_hline(yintercept = 0, size = 1)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
geom_hline(yintercept = 0, size = .5)
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
geom_hline(yintercept = 0, size = .5) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals show a strong\nrelationship with size.")
bind_cols(apatite$size.cat, ftresid) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
geom_hline(yintercept = 0, size = .5, linetype = 2) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals show a strong\nrelationship with size.")
View(residual.uncertainty)
bind_cols(apatite$size.cat, (ftresid / apatite$s.ft) * 100) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
geom_hline(yintercept = 0, size = .5, linetype = 2) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals show a strong\nrelationship with size.")
ftresid <- lm(s.ft ~ 0 + db.ft, hex)$residuals
bind_cols(hex$size.cat, (ftresid / hex$s.ft) * 100) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
geom_hline(yintercept = 0, size = .5, linetype = 2) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals show a strong\nrelationship with size.")
p <- apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
coord_trans(x = 'log10', y = 'log10') +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
p
p <- apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
coord_trans(x = 'log10', y = 'log10') +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
p
color3 <- c("#004352", "#3fa38f", "#ef3e36")
p <- apatite %>%
ggplot(aes(x = s.ft, y = db.ft, color= gc)) +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point(size = 2, shape = 16) +
coord_trans(x = 'log10', y = 'log10') +
labs(x= "2D Ft", y= "3D Ft") + #, title = "Manual 2D vs. Nano-CT 3D Ft", subtitle = The slopes for A and B grains overlap, while C grains are distinct
scale_color_manual(values = color3,
breaks = c("A", "B", "C"),
name = "Legend") +
theme_set(theme_classic()) +
theme(legend.position = "none") +
geom_abline(slope=1, intercept = 0) +
geom_abline(slope=.95, intercept=0, size= .1, linetype= 2) + #5%
geom_abline(slope=1.05263, intercept=0, size=.1, linetype= 2) + #5%
geom_abline(slope=.9, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=1.1111111, intercept=0, size=.1, linetype= 2) + #10%
geom_abline(slope=.8, intercept=0, size=.1, linetype= 2) + #20%
geom_abline(slope=1.25, intercept=0, size=.1, linetype= 2)  #20%
p
ggMarginal(p, type = "density")
#ggplot(apatite, aes(x = s.ft, y = db.ft)) +
library(ggridges)
ftresid <- lm(s.ft ~ 0 + db.ft, hex)$residuals
bind_cols(hex$size.cat, (ftresid / hex$s.ft) * 100) %>%
ggplot(aes(x = ...1, y = ...2)) +
geom_jitter(alpha = 0.5, width = 0.1, color = "lightblue") +
geom_point(stat = "summary", fun.y = "mean") +
geom_errorbar(stat = "summary", fun.data = "mean_se", fun.args = list(mult = 1.96), width = 0) +
geom_hline(yintercept = 0, size = .5, linetype = 2) +
labs(x = "Size Category", y = "Residuals", title = "The standard error of Ft residuals show a strong\nrelationship with size.")
#geom_density_ridges()
volresid <- lm(s.v ~ 0 + db.v, apatite)$residuals
bind_cols(apatite$size.cat, volresid) %>%
ggplot(aes(x = ...2, y = ...1)) +
geom_density_ridges(bins= 20)
ftrsid
p
ggplot(apatite, aes(x =  s.ft, y = db.ft)) +
geom_point() +
coord_trans(x = 'log10', y = 'log10')
ggplot(apatite, aes(x =  s.ft, y = db.ft)) +
coord_trans(x = 'log10', y = 'log10')  +
geom_point()
ggplot(apatite, aes(x =  s.ft, y = db.ft)) +
coord_trans( y = 'log10')  +
geom_point()
ggplot(apatite, aes(x =  s.ft, y = db.ft)) +
scale_y_continuous(trans = 'log10')  +
geom_point()
ggplot(apatite, aes(x =  s.ft, y = db.ft)) +
scale_y_continuous(trans = 'log10')  +
scale_x_continuous(trans = 'log10')  +
geom_point()
ggplot(apatite, aes(x =  s.ft, y = db.ft)) +
scale_y_continuous(trans = 'log10')  +
scale_x_continuous(trans = 'log10')  +
geom_smooth()  +
geom_point()
ggplot(apatite, aes(x =  s.ft, y = db.ft)) +
scale_y_continuous(trans = 'log10')  +
scale_x_continuous(trans = 'log10')  +
geom_smooth(method= "lm", formula = y~0+x, se=F)  +
geom_point()
ggplot(apatite, aes(x = s.v, y = db.v)) +
scale_y_continuous(trans = 'log10')  +
scale_x_continuous(trans = 'log10')  +
geom_smooth(method= "lm", formula = y~0+x, se=F) +
geom_point()
View(bootstrap.linreg.nest)
View(taylor.overlap)
